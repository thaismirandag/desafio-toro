{
 "Resources": {
  "QuestionsTable14A8B4AD": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "TableName": "questions",
    "TimeToLiveSpecification": {
     "AttributeName": "ttl",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/QuestionsTable/Resource"
   }
  },
  "ProcessQuestionTopicFA0E9364": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Process Question Topic",
    "TopicName": "process-question"
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/ProcessQuestionTopic/Resource"
   }
  },
  "NotifyResponseTopic3C5D9E93": {
   "Type": "AWS::SNS::Topic",
   "Properties": {
    "DisplayName": "Notify Response Topic",
    "TopicName": "notify-response"
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/NotifyResponseTopic/Resource"
   }
  },
  "LambdaRole3A44B857": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Role for Lambda functions in Desafio Toro"
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/LambdaRole/Resource"
   }
  },
  "LambdaRoleDefaultPolicy75625A82": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "QuestionsTable14A8B4AD",
         "Arn"
        ]
       }
      },
      {
       "Action": "sns:Publish",
       "Effect": "Allow",
       "Resource": [
        {
         "Ref": "ProcessQuestionTopicFA0E9364"
        },
        {
         "Ref": "NotifyResponseTopic3C5D9E93"
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:logs:*:*:*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaRoleDefaultPolicy75625A82",
    "Roles": [
     {
      "Ref": "LambdaRole3A44B857"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/LambdaRole/DefaultPolicy/Resource"
   }
  },
  "ProcessQuestionFunctionDAEF932C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "01211934c5f0c2ade989b2269479ef281649a7513b9c4892509ea6505f062ffc.zip"
    },
    "Environment": {
     "Variables": {
      "QUESTIONS_TABLE": {
       "Ref": "QuestionsTable14A8B4AD"
      },
      "NOTIFY_TOPIC": {
       "Ref": "NotifyResponseTopic3C5D9E93"
      }
     }
    },
    "Handler": "process_question.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/ProcessQuestionFunction/Resource",
    "aws:asset:path": "asset.01211934c5f0c2ade989b2269479ef281649a7513b9c4892509ea6505f062ffc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProcessQuestionFunctionAllowInvokeDesafioToroStackProcessQuestionTopicE5E19F4D2F27E47F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessQuestionFunctionDAEF932C",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "ProcessQuestionTopicFA0E9364"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/ProcessQuestionFunction/AllowInvoke:DesafioToroStackProcessQuestionTopicE5E19F4D"
   }
  },
  "ProcessQuestionFunctionProcessQuestionTopicA0BD4742": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "ProcessQuestionFunctionDAEF932C",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "ProcessQuestionTopicFA0E9364"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/ProcessQuestionFunction/ProcessQuestionTopic/Resource"
   }
  },
  "NotifyUserFunction24970A2B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "01211934c5f0c2ade989b2269479ef281649a7513b9c4892509ea6505f062ffc.zip"
    },
    "Environment": {
     "Variables": {
      "QUESTIONS_TABLE": {
       "Ref": "QuestionsTable14A8B4AD"
      }
     }
    },
    "Handler": "notify_user.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "LambdaRole3A44B857",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 30
   },
   "DependsOn": [
    "LambdaRoleDefaultPolicy75625A82",
    "LambdaRole3A44B857"
   ],
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/NotifyUserFunction/Resource",
    "aws:asset:path": "asset.01211934c5f0c2ade989b2269479ef281649a7513b9c4892509ea6505f062ffc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "NotifyUserFunctionAllowInvokeDesafioToroStackNotifyResponseTopic03D4F89E4C1B047A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "NotifyUserFunction24970A2B",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "NotifyResponseTopic3C5D9E93"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/NotifyUserFunction/AllowInvoke:DesafioToroStackNotifyResponseTopic03D4F89E"
   }
  },
  "NotifyUserFunctionNotifyResponseTopicF885599A": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "NotifyUserFunction24970A2B",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "NotifyResponseTopic3C5D9E93"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/NotifyUserFunction/NotifyResponseTopic/Resource"
   }
  },
  "DesafioToroApiE32CC593": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API para o Desafio Toro",
    "Name": "Desafio Toro API"
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Resource"
   }
  },
  "DesafioToroApiCloudWatchRole99A19228": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/CloudWatchRole/Resource"
   }
  },
  "DesafioToroApiAccount42947F2A": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "DesafioToroApiCloudWatchRole99A19228",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "DesafioToroApiE32CC593"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Account"
   }
  },
  "DesafioToroApiDeployment52040525bbec043a0c2d3f9f688ede66792aedb6": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API para o Desafio Toro",
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    }
   },
   "DependsOn": [
    "DesafioToroApiOPTIONSA1D2B516",
    "DesafioToroApiquestionsOPTIONSF5BC995B",
    "DesafioToroApiquestionsPOST4D5D90DD",
    "DesafioToroApiquestionsDE1122F6"
   ],
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Deployment/Resource"
   }
  },
  "DesafioToroApiDeploymentStageprodB2C0431E": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "DesafioToroApiDeployment52040525bbec043a0c2d3f9f688ede66792aedb6"
    },
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "DesafioToroApiAccount42947F2A"
   ],
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/DeploymentStage.prod/Resource"
   }
  },
  "DesafioToroApiOPTIONSA1D2B516": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "DesafioToroApiE32CC593",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/OPTIONS/Resource"
   }
  },
  "DesafioToroApiquestionsDE1122F6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "DesafioToroApiE32CC593",
      "RootResourceId"
     ]
    },
    "PathPart": "questions",
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/questions/Resource"
   }
  },
  "DesafioToroApiquestionsOPTIONSF5BC995B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "DesafioToroApiquestionsDE1122F6"
    },
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/questions/OPTIONS/Resource"
   }
  },
  "DesafioToroApiquestionsPOSTApiPermissionDesafioToroStackDesafioToroApiD5E61628POSTquestionsA0580C28": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessQuestionFunctionDAEF932C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DesafioToroApiE32CC593"
       },
       "/",
       {
        "Ref": "DesafioToroApiDeploymentStageprodB2C0431E"
       },
       "/POST/questions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/questions/POST/ApiPermission.DesafioToroStackDesafioToroApiD5E61628.POST..questions"
   }
  },
  "DesafioToroApiquestionsPOSTApiPermissionTestDesafioToroStackDesafioToroApiD5E61628POSTquestions0EAC0561": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessQuestionFunctionDAEF932C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "DesafioToroApiE32CC593"
       },
       "/test-invoke-stage/POST/questions"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/questions/POST/ApiPermission.Test.DesafioToroStackDesafioToroApiD5E61628.POST..questions"
   }
  },
  "DesafioToroApiquestionsPOST4D5D90DD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ProcessQuestionFunctionDAEF932C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "DesafioToroApiquestionsDE1122F6"
    },
    "RestApiId": {
     "Ref": "DesafioToroApiE32CC593"
    }
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/DesafioToroApi/Default/questions/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OzW7CQAyEn4X74vLTS4/QqreqUcIdORsXDMluFHuFolXevdoNCE7zzdgaewPrj3dYLfAmS9tcly3XECtFezV4k2NsRoedb2qIB6xbMp9/LsNkxAnEg+/Z5jBDFWqxA/fK3qX01U+GsYNY+rkla+FbtmOyM02mxa5uEOJ3cPbR8soFDR2L5D7ZHlGEVGCXxMgW9sFeSfcoZLDnEyrdcIRYkuiu53z3iTtrfXBqvqhv/diR05S+uErxlJ+doSTxYbCU639Iz75Jwzs9pvcjmafpGecfUxG7U9r5DdoHnUwx6tm7ty2sV7DeLC7CvByCU+4Iyln/AU5Z2qulAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "DesafioToroStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "DesafioToroApiEndpointF67BFE61": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DesafioToroApiE32CC593"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DesafioToroApiDeploymentStageprodB2C0431E"
      },
      "/"
     ]
    ]
   }
  },
  "ApiEndpoint": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "DesafioToroApiE32CC593"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "DesafioToroApiDeploymentStageprodB2C0431E"
      },
      "/"
     ]
    ]
   }
  },
  "QuestionsTableName": {
   "Description": "DynamoDB table name",
   "Value": {
    "Ref": "QuestionsTable14A8B4AD"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}